" Map <leader>
let mapleader=","

" Enable automatic buffer update
set autoread
set updatetime=300

" Navigate b/w windows
map <C-j> <C-W>j
map <c-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Fast vertical/horizontal split
map <leader>v :vsp<cr>
map <leader>x :sp<cr>

" Fast save/quit
map <leader>w :w!<cr>
map <leader>q :q!<cr>
map <leader>Q :qa!<cr>

" Enable highlighted search
set hlsearch
nnoremap <leader>c :noh<cr>

" Enable filetype plugins
filetype plugin on
filetype indent on
syntax on

" Exclude blank windows when creating new sessions
set sessionoptions-=blank

" Show line numbers
set number
highlight SignColumn guibg=#000000 ctermbg=250
autocmd ColorScheme * highlight! link SignColumn LineNr

" ==========================
" = Plugins Configurations =
" ==========================

call plug#begin()

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'preservim/nerdtree'
Plug 'morhetz/gruvbox'
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'neoclide/coc.nvim', { 'branch': 'release' }
Plug 'vim-airline/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'
Plug 'vim-scripts/peaksea'

call plug#end()

" Plugin 'junegunn/fzf' configuration
let g:fzf_layout = { 'down': '30%' }
nnoremap <leader>p :FZF --border --preview cat\ {}<CR>
nnoremap <leader>s :FZF --border<CR>

let $FZF_DEFAULT_OPTS="--preview-window 'right:57%' --preview 'bat --style=numbers --line-range :300 {}'
			\ --bind ctrl-y:preview-up,ctrl-e:preview-down,
			\ctrl-b:preview-page-up,ctrl-f:preview-page-down,
			\ctrl-u:preview-half-page-up,ctrl-d:preview-half-page-down,
			\shift-up:preview-top,shift-down:preview-bottom,
			\alt-up:half-page-up,alt-down:half-page-down"

" Plugin 'preservim/nerdtree' configuration
let g:NERDTreeWinPos = "left"
let g:NERDTreeFileLines = 1

nnoremap <leader>n :NERDTree<CR>
nnoremap <leader>t :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>

" Plugin 'neoclide/coc' configuration
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gD <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
nmap <silent> gR <Plug>(coc-rename)

" Plugin 'airblade/vim-gitgutter' configuration
let g:gitgutter_enabled=1
let g:gitgutter_sign_added='+'
let g:gitgutter_sign_modified='~'
let g:gitgutter_sign_removed='-'
let g:gitgutter_sign_removed_first_line='-1'
let g:gitgutter_sign_removed_above_and_below='-_'
let g:gitgutter_sign_modified_removed='~-'
let g:gitgutter_set_sign_background=1

highlight GitGutterAdd guibg=#00CC00 guifg=#000000 ctermbg=10 ctermfg=0
highlight GitGutterChange guibg=#ffff00 guifg=#000000 ctermbg=11 ctermfg=0
highlight GitGutterDelete guibg=#FF0000 guifg=#000000 ctermbg=9 ctermfg=0

" Plugin 'fatih/vim-go' configuration
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_operators = 1
let g:go_fmt_autosave = 1
let g:go_fmt_command = "goimports"
let g:go_auto_type_info = 1

" Plugin 'morhetz/gruvbox' configuration
let g:gruvbox_contrast_dark='hard'
let g:gruvbox_contrast_light='hard'

" Color scheme configuration
syntax enable

set background=dark
colorscheme gruvbox

set cursorline
highlight CursorLine term=bold cterm=bold guibg=Grey40
